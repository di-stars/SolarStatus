=== CONFIGURATION
Configure conf.ini.php to suit your needs.

In current versions, there are no scripts shipped anymore. Instead everything is in conf.ini.php.
But feel free to continue using scripts, this feature is not deprecated.

Make the scripts readable and executable:
  chmod 0755 /path/to/SolarStatus/scripts/*



=== INTEGRATION INTO NAPP-IT (napp-it.org)
prerequisite: installed napp-it

install SolarStatus into:
  /var/web-gui/_my/wwwroot/

change user to napp-it and make .php executable
  
install php
  pkg set-publisher -g http://pkg.omniti.com/omniti-ms/ ms.omniti.com
  pkg install php-54 (or any php5.x version that you can find, try "pkg search php5")

make php available under /usr/bin/php
  ln -s /omni/.../bin/php /usr/bin/php

install editor and edit napp-it startup script
  pkg install nano
  nano /etc/init.d/napp-it

find the TWO lines where MiniHTTPD is started:
  /var/web-gui/data/tools/httpd/napp-it-mhttpd -c \*\*.pl\|\*\*.php -u napp-it ....
and change the "-c \*\*.pl\" to "-c \*\*.pl\|\*\*.php", now it looks like:
  /var/web-gui/data/tools/httpd/napp-it-mhttpd -c \*\*.pl\|\*\*.php -u napp-it ....

now perl AND php are registered as cgi-executable.

restart napp-it and you're good to go:
  /etc/init.d/napp-it restart


=== LIGHTTPD WEBSERVER
pkg set-publisher -g http://pkg.omniti.com/omniti-ms/ ms.omniti.com
pkg install lighttpd
pkg install php-54 (or any php5.x version that you can find, try "pkg search php5")
  
See /path/to/SolarStatus/install/lighttpd.conf for a preconfigured lighttpd.conf
The file belongs into /etc/lighttpd/ or /etc/lighttpd/<version>/ depending on your system.

The bundled lighttpd.conf enables SSL on Port 443 and Fast-CGI for PHP5.
Please check the following directives inside the file:
  server.document-root   <- unpack SolarStatus into that directory
  server.errorlog
  var.php_bin-path

The bundled lighttpd.conf contains directives to enable SSL/TLS, change the following:
  server.port = 443
  ssl.engine = "enable"

To generate a self-signed certificate:
  openssl req -new -x509 -keyout server.pem -out server.pem -days 100 -nodes
    
It is important to set the common-name to the host or IP-address
 which you use to address your server.
Example:
  https://192.168.11.42/  "192.168.11.42" is your CN
  https://box/            "box" is your CN
  
Use the following to export your generated certiciate to an pfx file,
 which can be imported by windows et.al.
You have to import it into the "Trusted Root Certification Authorities" store,
 then all major browsers should accept the SSL-connection.
  openssl pkcs12 -export -out knecht.pfx -in server.pem -name "MyBox"

See also:
  http://redmine.lighttpd.net/wiki/1/Docs:SSL
  http://www.madboa.com/geek/openssl/#cert-self
  
Integration with Solaris-SMF (svcs and svcadm commands, http://en.wikipedia.org/wiki/Service_Management_Facility)
See /path/to/SolarStatus/install/smf-svc-lighttpd.xml for a preconfigured service-descriptor for SMF
 
See for installation instructions and necessary init.d-script
  http://redmine.lighttpd.net/wiki/1/LighttpdOnSolaris

The bundled SMF-descriptor already uses the following descriptor:
  http://blogs.oracle.com/mandy/entry/lighttpd_smf_troubles



=== SMART / SmartMonTools
pkg install smartmontools

allow the webserver-user to execute smartctl with root-privileges without password
create a file /etc/sudoers.d/smartctl:
  webservd ALL=NOPASSWD:/path/to/smartctl
OR if using napp-it:
  napp-it ALL=NOPASSWD:/path/to/smartctl



=== Python Checker for Cronjob
/path/to/SolarStatus/extra contains the alerter.py python-script which is meant to be executed as a cronjob.
It's job is to check your services (SMF), check the ZFS Pool State and your S.M.A.R.T. state and mail you in case of failure.
It needs to be configured, so please edit it.

To activate the alerter, register it as root in the root's crontab:
  export EDITOR=nano
  crontab -e
insert (exemplary, edit as you like):
  # 3am, every day, check status
  0 3 * * * python /path/to/SolarStatus/extra/alerter.py
